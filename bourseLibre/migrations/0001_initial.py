# Generated by Django 2.1.7 on 2019-03-05 23:22

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('site_web', models.URLField(blank=True)),
                ('description', models.TextField(default='', null=True)),
                ('competences', models.TextField(default='', null=True)),
                ('avatar', stdimage.models.StdImageField(blank=True, null=True, upload_to='avatars/')),
                ('inscrit_newsletter', models.BooleanField(default=False)),
                ('date_registration', models.DateTimeField(editable=False, verbose_name='Date de création')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Adresse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rue', models.CharField(blank=True, max_length=200, null=True)),
                ('code_postal', models.CharField(blank=True, default='66000', max_length=5, null=True)),
                ('latitude', models.FloatField(blank=True, default='42.6976', null=True)),
                ('longitude', models.FloatField(blank=True, default='2.8954', null=True)),
                ('pays', models.CharField(blank=True, default='France', max_length=12, null=True)),
                ('telephone', models.CharField(blank=True, max_length=10, validators=[django.core.validators.RegexValidator(message='Le numero de telephone doit contenir 10 chiffres', regex='^\\d{9,10}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(max_length=100)),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de parution')),
                ('profil1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profil1', to=settings.AUTH_USER_MODEL)),
                ('profil2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profil2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('date_creation',),
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.DecimalField(decimal_places=3, max_digits=6, verbose_name='quantite')),
            ],
            options={
                'ordering': ('panier',),
                'verbose_name': 'item',
                'verbose_name_plural': 'items',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bourseLibre.Conversation')),
            ],
        ),
        migrations.CreateModel(
            name='Panier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(editable=False, verbose_name='date de création ')),
                ('checked_out', models.BooleanField(default=False, verbose_name='checked out')),
                ('etat', models.CharField(choices=[('a', 'en cours'), ('ok', 'validé'), ('t', 'terminé'), ('c', 'annulé')], default='a', max_length=8, verbose_name='état')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-date_creation',),
                'verbose_name': 'panier',
                'verbose_name_plural': 'paniers',
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(editable=False, verbose_name='Date de parution')),
                ('date_debut', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Débute le : (mm/jj/an)')),
                ('date_expiration', models.DateField(blank=True, default=datetime.date(2019, 3, 26), null=True, verbose_name='Expire le : (jj/mm/an)')),
                ('nom_produit', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('stock_initial', models.FloatField(default=1, max_length=250, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantité disponible')),
                ('stock_courant', models.FloatField(default=1, max_length=250, validators=[django.core.validators.MinValueValidator(0)])),
                ('prix', models.DecimalField(decimal_places=2, default=1, max_digits=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('unite_prix', models.CharField(choices=[('don', 'don'), ('troc', 'troc'), ('G1', 'G1'), ('soudaqui', 'soudaqui'), ('SEL', 'SEL'), ('JEU', 'JEU'), ('heuresT', 'heuresT'), ('Autre', 'A negocier')], default='lliure', max_length=8, verbose_name='monnaie')),
                ('categorie', models.CharField(choices=[('aliment', 'aliment'), ('vegetal', 'végétal'), ('service', 'service'), ('objet', 'objet')], default='aliment', max_length=20)),
                ('estUneOffre', models.BooleanField(default=True, verbose_name='Offre (cochez) ou Demande (décochez)')),
            ],
        ),
        migrations.CreateModel(
            name='Produit_aliment',
            fields=[
                ('produit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bourseLibre.Produit')),
                ('couleur', models.CharField(choices=[('#e6f2ff', '#e6f2ff')], default='#e6f2ff', max_length=20)),
                ('souscategorie', models.CharField(choices=[('legumes', 'legumes'), ('fruits', 'fruits'), ('champignons', 'champignons'), ('boisson', 'boisson'), ('herbes', 'herbes'), ('condiments', 'condiments'), ('viande', 'viande'), ('poisson', 'poisson'), ('boulangerie', 'boulangerie'), ('patisserie', 'patisserie'), ('autre', 'autre')], default='l', max_length=20)),
                ('etat', models.CharField(choices=[('frais', 'frais'), ('sec', 'sec'), ('conserve', 'conserve')], default='frais', max_length=20)),
                ('type_prix', models.CharField(choices=[('kg', 'kg'), ('100g', '100g'), ('10g', '10g'), ('g', 'g'), ('un', 'unité'), ('li', 'litre')], default='kg', max_length=20, verbose_name='par')),
            ],
            bases=('bourseLibre.produit',),
        ),
        migrations.CreateModel(
            name='Produit_objet',
            fields=[
                ('produit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bourseLibre.Produit')),
                ('couleur', models.CharField(choices=[('#ffffe6', '#ffffe6')], default='#ffffe6', max_length=20)),
                ('souscategorie', models.CharField(choices=[('outillage', 'outillage'), ('vehicule', 'vehicule'), ('multimedia', 'multimedia'), ('mobilier', 'mobilier'), ('construction', 'construction'), ('autre', 'autre')], default='o', max_length=20)),
                ('etat', models.CharField(choices=[('excellent', 'excellent'), ('bon', 'bon'), ('moyen', 'moyen'), ('mauvais', 'mauvais')], default='excellent', max_length=20)),
                ('type_prix', models.CharField(choices=[('kg', 'kg'), ('100g', '100g'), ('10g', '10g'), ('g', 'g'), ('un', 'unité'), ('li', 'litre')], default='kg', max_length=20, verbose_name='par')),
            ],
            bases=('bourseLibre.produit',),
        ),
        migrations.CreateModel(
            name='Produit_service',
            fields=[
                ('produit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bourseLibre.Produit')),
                ('couleur', models.CharField(choices=[('#ffe6e6', '#ffe6e6')], default='#ffe6e6', max_length=20)),
                ('souscategorie', models.CharField(choices=[('jardinage', 'jardinage'), ('cuisine', 'cuisine'), ('éducation', 'éducation'), ('soins', 'soins'), ('bien être', 'bien être'), ('informatique', 'informatique'), ('batiment', 'batiment'), ('mecanique', 'mecanique'), ('autre...', 'autre...')], default='j', max_length=20)),
                ('etat', models.CharField(choices=[('excellent', 'excellent'), ('bon', 'bon'), ('moyen', 'moyen'), ('naze', 'naze')], default='excellent', max_length=20)),
                ('type_prix', models.CharField(choices=[('h', 'heure'), ('un', 'unité')], default='h', max_length=20, verbose_name='par')),
            ],
            bases=('bourseLibre.produit',),
        ),
        migrations.CreateModel(
            name='Produit_vegetal',
            fields=[
                ('produit_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bourseLibre.Produit')),
                ('couleur', models.CharField(choices=[('#e6ffe6', '#e6ffe6')], default='#e6ffe6', max_length=20)),
                ('souscategorie', models.CharField(choices=[('graines', 'graines'), ('fleurs', 'fleurs'), ('plantes', 'plantes'), ('autre', 'autre')], default='g', max_length=20)),
                ('etat', models.CharField(choices=[('frais', 'frais'), ('séché', 'séché')], default='frais', max_length=20)),
                ('type_prix', models.CharField(choices=[('kg', 'kg'), ('100g', '100g'), ('10g', '10g'), ('g', 'g'), ('un', 'unité'), ('li', 'litre')], default='kg', max_length=20, verbose_name='par')),
            ],
            bases=('bourseLibre.produit',),
        ),
        migrations.AddField(
            model_name='produit',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='item',
            name='panier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bourseLibre.Panier', verbose_name='panier'),
        ),
        migrations.AddField(
            model_name='item',
            name='produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bourseLibre.Produit'),
        ),
        migrations.AddField(
            model_name='profil',
            name='adresse',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bourseLibre.Adresse'),
        ),
        migrations.AddField(
            model_name='profil',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='profil',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
